{"/home/travis/build/npmtest/node-npmtest-qiniu/test.js":"/* istanbul instrument in package npmtest_qiniu */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - init-after\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - init-after\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - init-after\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-qiniu/lib.npmtest_qiniu.js":"/* istanbul instrument in package npmtest_qiniu */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_qiniu = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_qiniu = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-qiniu/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-qiniu && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_qiniu */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_qiniu\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // init-after\n    // run browser js-env code - init-after\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - init-after\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_qiniu.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_qiniu.rollup.js'] =\n            local.assetsDict['/assets.npmtest_qiniu.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_qiniu.__dirname + '/lib.npmtest_qiniu.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-qiniu/node_modules/qiniu/index.js":"\nvar libpath = process.env.QINIU_COV ? './lib-cov' : './qiniu';\n\nmodule.exports = {\n  auth: {\n    digest: require(libpath + '/auth' + '/digest.js')\n  },\n  io: require(libpath + '/io.js'),\n  rs: require(libpath + '/rs.js'),\n  rsf: require(libpath + '/rsf.js'),\n  fop: require(libpath + '/fop.js'),\n  conf: require(libpath + '/conf.js'),\n  rpc: require(libpath + '/rpc.js'),\n  util: require(libpath + '/util.js'),\n  zone: require(libpath + '/zone.js')\n};\n","/home/travis/build/npmtest/node-npmtest-qiniu/node_modules/qiniu/qiniu/auth/digest.js":"\nvar url = require('url');\nvar conf = require('../conf');\nvar util = require('../util');\n\nexports.Mac = Mac;\n\nfunction Mac(accessKey, secretKey) {\n  this.accessKey = accessKey || conf.ACCESS_KEY;\n  this.secretKey = secretKey || conf.SECRET_KEY;\n}\n\n//Mac.prototype._sign = function(data) {\n//  return util.hmacSha1(data, this.secretKey);\n//}\n//\n//Mac.prototype.sign = function(data) {\n//  return this.accessKey + ':' + this._sign(data);\n//}\n//\n//Mac.prototype.signWithData = function(b) {\n//  var data = util.urlsafeBase64Encode(b);\n//  var sign = this._sign(data);\n//  return this.accessKey + ':' + sign + ':' + data;\n//}\n//\n//Mac.prototype.sign_request = function(path, body, content_type) {\n//  var u = url.parse(path);\n//  var path = u.path;\n//  var data = path + '\\n';\n//\n//  if (body) {\n//    data += body;\n//  }\n//\n//  return this.access + ':' + this._sign(data);\n//}\n//\n\n","/home/travis/build/npmtest/node-npmtest-qiniu/node_modules/qiniu/qiniu/conf.js":"var fs = require('fs');\nvar path = require('path');\nvar os = require('os');\n\nexports.ACCESS_KEY = '<PLEASE APPLY YOUR ACCESS KEY>';\nexports.SECRET_KEY = '<DONT SEND YOUR SECRET KEY TO ANYONE>';\n\nvar pkg = JSON.parse(fs.readFileSync(path.join(__dirname, '../', 'package.json')));\nvar ua = function() {\n    return 'QiniuNodejs/' + pkg.version + ' (' + os.type() + '; ' + os.platform() + '; ' + os.arch() + '; )';\n}\n\nexports.USER_AGENT = ua();\nexports.UP_HOST = 'http://upload.qiniu.com';\nexports.RS_HOST = 'http://rs.qbox.me';\nexports.RSF_HOST = 'http://rsf.qbox.me';\nexports.API_HOST = 'http://api.qiniu.com';\nexports.RPC_TIMEOUT = 3600000; // default rpc timeout: one hour\nexports.UC_HOST  = 'http://uc.qbox.me'; \nexports.UP_HTTPS_HOST = 'https://up-z1.qbox.me';\nexports.SCHEME = 'http'; // 上传使用的协议 \nexports.AUTOZONE = true; // 自动获取不同机房空间的上传域名\nexports.BUCKET = null ; // 上传空间\nexports.EXPIRE = 0;","/home/travis/build/npmtest/node-npmtest-qiniu/node_modules/qiniu/qiniu/util.js":"var fs = require('fs');\nvar url = require('url');\nvar path = require('path');\nvar crypto = require('crypto');\nvar conf = require('./conf');\n\nexports.isQiniuCallback = isQiniuCallback;\n\n// ------------------------------------------------------------------------------------------\n// func encode\n\nexports.urlsafeBase64Encode = function(jsonFlags) {\n  var encoded = new Buffer(jsonFlags).toString('base64');\n  return exports.base64ToUrlSafe(encoded);\n}\n\nexports.base64ToUrlSafe = function(v) {\n  return v.replace(/\\//g, '_').replace(/\\+/g, '-');\n}\n\nexports.hmacSha1 = function(encodedFlags, secretKey) {\n  /*\n   *return value already encoded with base64\n  * */\n  var hmac = crypto.createHmac('sha1', secretKey);\n  hmac.update(encodedFlags);\n  return hmac.digest('base64');\n}\n\n// ------------------------------------------------------------------------------------------\n// func generateAccessToken\n\nexports.generateAccessToken = function(uri, body) {\n  var u = url.parse(uri);\n  var path = u.path;\n  var access = path + '\\n';\n\n  if (body) {\n    access += body;\n  }\n\n  var digest = exports.hmacSha1(access, conf.SECRET_KEY);\n  var safeDigest = exports.base64ToUrlSafe(digest);\n  return 'QBox ' + conf.ACCESS_KEY + ':' + safeDigest;\n}\n\nfunction isQiniuCallback(path, body, callbackAuth) {\n  var auth = exports.generateAccessToken(path, body);\n  return auth === callbackAuth;\n}\n","/home/travis/build/npmtest/node-npmtest-qiniu/node_modules/qiniu/qiniu/io.js":"var conf = require('./conf');\nvar util = require('./util');\nvar rpc = require('./rpc');\nvar fs = require('fs');\nvar getCrc32 = require('crc32');\nvar url = require('url');\nvar mime = require('mime');\nvar Readable = require('stream').Readable;\nvar formstream = require('formstream');\nvar urllib = require('urllib');\nvar zone = require('./zone');\n\nexports.UNDEFINED_KEY = '?'\nexports.PutExtra = PutExtra;\nexports.PutRet = PutRet;\nexports.put = put;\nexports.putWithoutKey = putWithoutKey;\nexports.putFile = putFile;\nexports.putReadable = putReadable;\nexports.putFileWithoutKey = putFileWithoutKey;\n\n// @gist PutExtra\nfunction PutExtra(params, mimeType, crc32, checkCrc) {\n  this.params = params || {};\n  this.mimeType = mimeType || null;\n  this.crc32 = crc32 || null;\n  this.checkCrc = checkCrc || 0;\n}\n// @endgist\n\nfunction PutRet(hash, key) {\n  this.hash = hash || null;\n  this.key = key || null;\n}\n\n// onret: callback function instead of ret\nfunction putReadable (uptoken, key, rs, extra, onret) {\n  if (!extra) {\n    extra = new PutExtra();\n  }\n  if (!extra.mimeType) {\n    extra.mimeType = 'application/octet-stream';\n  }\n\n  if (!key) {\n    key = exports.UNDEFINED_KEY;\n  }\n\n  rs.on(\"error\", function (err) {\n      onret({code: -1, error: err.toString()}, {});\n  });\n\n  var form = getMultipart(uptoken, key, rs, extra);\n  // 设置上传域名\n  zone.up_host(uptoken, conf);\n\n  return rpc.postMultipart(conf.UP_HOST, form, onret);\n}\n\n\nfunction put(uptoken, key, body, extra, onret) {\n  var rs = new Readable();\n  rs.push(body);\n  rs.push(null);\n\n  if (!extra) {\n    extra = new PutExtra();\n  }\n  if (extra.checkCrc == 1) {\n    var bodyCrc32 = getCrc32(body);\n    extra.crc32 = '' + parseInt(bodyCrc32, 16);\n  } else if (extra.checkCrc == 2 && extra.crc32) {\n    extra.crc32 = '' + extra.crc32\n  }\n  return putReadable(uptoken, key, rs, extra, onret)\n}\n\nfunction putWithoutKey(uptoken, body, extra, onret) {\n  return put(uptoken, null, body, extra, onret);\n}\n\nfunction getMultipart(uptoken, key, rs, extra) {\n\n  var form = formstream();\n\n  form.field('token', uptoken);\n  if (key != exports.UNDEFINED_KEY) {\n    form.field('key', key);\n  }\n  form.stream('file', rs, key, extra.mimeType);\n\n  if (extra.crc32) {\n    form.field('crc32', extra.crc32);\n  }\n\n  for (var k in extra.params) {\n    form.field(k, extra.params[k]);\n  }\n\n  return form;\n}\n\nfunction putFile(uptoken, key, loadFile, extra, onret) {\n\n  var rs = fs.createReadStream(loadFile);\n\n  if (!extra) {\n    extra = new PutExtra();\n  }\n  if (extra.checkCrc == 1) {\n    var fileCrc32 = getCrc32(fs.readFileSync(loadFile));\n    extra.crc32 = '' + parseInt(fileCrc32, 16);\n  } else if (extra.checkCrc == 2 && extra.crc32) {\n    extra.crc32 = '' + extra.crc32\n  }\n  if (!extra.mimeType) {\n    extra.mimeType = mime.lookup(loadFile);\n  }\n\n  return putReadable(uptoken, key, rs, extra, onret);\n}\n\nfunction putFileWithoutKey(uptoken, loadFile, extra, onret) {\n  return putFile(uptoken, null, loadFile, extra, onret);\n}\n","/home/travis/build/npmtest/node-npmtest-qiniu/node_modules/qiniu/qiniu/rpc.js":"var urllib = require('urllib');\nvar util = require('./util');\nvar conf = require('./conf');\n\nexports.postMultipart = postMultipart;\nexports.postWithForm = postWithForm;\nexports.postWithoutForm = postWithoutForm;\n\nfunction postMultipart(uri, form, onret) {\n  return post(uri, form, form.headers(), onret);\n}\n\nfunction postWithForm(uri, form, token, onret) {\n  var headers = {\n    'Content-Type': 'application/x-www-form-urlencoded'\n  };\n  if (token) {\n    headers['Authorization'] = token;\n  }\n  return post(uri, form, headers, onret);\n}\n\nfunction postWithoutForm(uri, token, onret) {\n  var headers = {\n    'Content-Type': 'application/x-www-form-urlencoded',\n  };\n  if (token) {\n    headers['Authorization'] = token;\n  }\n  return post(uri, null, headers, onret);\n}\n\nfunction post(uri, form, headers, onresp) {\n  headers = headers || {};\n  headers['User-Agent'] = headers['User-Agent'] || conf.USER_AGENT;\n\n  var data = {\n    headers: headers,\n    method: 'POST',\n    dataType: 'json',\n    timeout: conf.RPC_TIMEOUT,\n  };\n\n  if (Buffer.isBuffer(form) || typeof form === 'string') {\n    data.content = form;\n  } else if (form) {\n    data.stream = form;\n  } else {\n    data.headers['Content-Length'] = 0;\n  };\n\n  var req = urllib.request(uri, data, function(err, result, res) {\n    var rerr = null;\n    if (err || Math.floor(res.statusCode/100) !== 2) {\n      rerr = {code: res&&res.statusCode||-1, error: err||result&&result.error||''};\n    }\n    onresp(rerr, result, res);\n  });\n\n  return req;\n}\n\n","/home/travis/build/npmtest/node-npmtest-qiniu/node_modules/qiniu/qiniu/zone.js":"var request = require('sync-request');\n\n//conf 为全局变量\nexports.up_host = function (uptoken, conf){\n\n    var version = process.versions;\n    var num = version.node.split(\".\")[0];\n\n    // node 版本号低于 1.0.0, 使用默认域名上传，可以在conf中指定上传域名\n    if(num < 1 ){\n        conf.AUTOZONE = false;\n    }\n\n    if(!conf.AUTOZONE){\n        return;\n    }\n\n    var ak = uptoken.toString().split(\":\")[0];\n    var tokenPolicy = uptoken.toString().split(\":\")[2];\n    var tokenPolicyStr = new Buffer(tokenPolicy, 'base64').toString();\n    var json_tokenPolicyStr = JSON.parse(tokenPolicyStr);\n\n    var scope = json_tokenPolicyStr.scope;\n    var bucket = scope.toString().split(\":\")[0];\n\n    // bucket 相同，上传域名仍在过期时间内\n    if((new Date().getTime() < conf.EXPIRE) && bucket == conf.BUCKET){\n        return;\n    }\n    \n    //记录bucket名\n    conf.BUCKET = bucket;\n\n    var res = request('GET', 'http://uc.qbox.me/v1/query?ak=' + ak + '&bucket=' + bucket, {\n      'headers': {\n        'Content-Type': 'application/json'\n      }\n    });\n\n    if(res.statusCode == 200){\n        \n        var json_str = JSON.parse(res.body.toString());\n\n        //判断设置使用的协议, 默认使用http\n        if(conf.SCHEME == 'http'){\n            conf.UP_HOST = json_str.http.up[1];\n        }else{\n            conf.UP_HOST = json_str.https.up[0];\n        }\n\n        conf.EXPIRE = 86400 + new Date().getTime(); \n\n    }else{\n        var err = new Error('Server responded with status code ' + res.statusCode + ':\\n' + res.body.toString());\n        err.statusCode = res.statusCode;\n        err.headers = res.headers;\n        err.body = res.body;\n        throw err;\n    }\n\n}\n","/home/travis/build/npmtest/node-npmtest-qiniu/node_modules/qiniu/qiniu/rs.js":"var url = require('url');\nvar crypto = require('crypto');\nvar formstream = require('formstream');\nvar querystring = require('querystring');\nvar rpc = require('./rpc');\nvar conf = require('./conf');\nvar util = require('./util');\nvar Mac = require('./auth/digest').Mac;\n\n\nexports.Client = Client;\nexports.Entry = Entry;\nexports.EntryPath = EntryPath;\nexports.EntryPathPair = EntryPathPair;\nexports.BatchItemRet = BatchItemRet;\nexports.BatchStatItemRet = BatchStatItemRet;\n\nexports.PutPolicy = PutPolicy;\nexports.PutPolicy2 = PutPolicy2;\nexports.GetPolicy = GetPolicy;\nexports.makeBaseUrl = makeBaseUrl;\n\nfunction Client(client) {\n  this.client = client || null;\n}\n\nClient.prototype.stat = function(bucket, key, onret) {\n  var encodedEntryUri = getEncodedEntryUri(bucket, key);\n  var uri = conf.RS_HOST + '/stat/' + encodedEntryUri;\n  var digest = util.generateAccessToken(uri, null);\n\n  rpc.postWithoutForm(uri, digest, onret);\n}\n\nClient.prototype.remove = function(bucket, key, onret) {\n  /*\n   * func (this Client) Delete(bucket, key string) (err error)\n   * */\n  var encodedEntryUri = getEncodedEntryUri(bucket, key);\n  var uri = conf.RS_HOST + '/delete/' + encodedEntryUri;\n  var digest = util.generateAccessToken(uri, null);\n  rpc.postWithoutForm(uri, digest, onret);\n}\n\nClient.prototype.move = function(bucketSrc, keySrc, bucketDest, keyDest, onret) {\n  var encodedEntryURISrc = getEncodedEntryUri(bucketSrc, keySrc);\n  var encodedEntryURIDest = getEncodedEntryUri(bucketDest, keyDest);\n  var uri = conf.RS_HOST + '/move/' + encodedEntryURISrc + '/' + encodedEntryURIDest;\n  var digest = util.generateAccessToken(uri, null);\n  rpc.postWithoutForm(uri, digest, onret);\n}\n\nClient.prototype.forceMove = function(bucketSrc, keySrc, bucketDest, keyDest, force, onret) {\n\n  var encodedEntryURISrc = getEncodedEntryUri(bucketSrc, keySrc);\n  var encodedEntryURIDest = getEncodedEntryUri(bucketDest, keyDest);\n  var uri = conf.RS_HOST + '/move/' + encodedEntryURISrc + '/' + encodedEntryURIDest +'/force/'+force;\n\n  var digest = util.generateAccessToken(uri, null);\n  rpc.postWithoutForm(uri, digest, onret);\n}\n\nClient.prototype.copy = function(bucketSrc, keySrc, bucketDest, keyDest, onret) {\n  var encodedEntryURISrc = getEncodedEntryUri(bucketSrc, keySrc);\n  var encodedEntryURIDest = getEncodedEntryUri(bucketDest, keyDest);\n  var uri = conf.RS_HOST + '/copy/' + encodedEntryURISrc + '/' + encodedEntryURIDest;\n\n  var digest = util.generateAccessToken(uri, null);\n  rpc.postWithoutForm(uri, digest, onret);\n}\n\nClient.prototype.forceCopy = function(bucketSrc, keySrc, bucketDest, keyDest, force, onret) {\n\n    var encodedEntryURISrc = getEncodedEntryUri(bucketSrc, keySrc);\n    var encodedEntryURIDest = getEncodedEntryUri(bucketDest, keyDest);\n    var uri = conf.RS_HOST + '/copy/' + encodedEntryURISrc + '/' + encodedEntryURIDest +'/force/'+force;\n\n    var digest = util.generateAccessToken(uri, null);\n    rpc.postWithoutForm(uri, digest, onret);\n}\n\n\nClient.prototype.fetch = function(url, bucket, key, onret) {\n  var bucketUri = getEncodedEntryUri(bucket, key);\n  var fetchUrl = util.urlsafeBase64Encode(url);\n  var uri = 'http://iovip.qbox.me/fetch/' + fetchUrl + '/to/' + bucketUri;\n  var digest = util.generateAccessToken(uri, null);\n  rpc.postWithoutForm(uri, digest, onret);\n}\n\nfunction Entry(hash, fsize, putTime, mimeType, endUser) {\n  this.hash = hash || null;\n  this.fsize = fsize || null;\n  this.putTime = putTime || null;\n  this.mimeType = mimeType || null;\n  this.endUser = endUser || null;\n}\n\n// ----- batch  -------\n\nfunction EntryPath(bucket, key) {\n  this.bucket = bucket || null;\n  this.key = key || null;\n}\n\nEntryPath.prototype.encode = function() {\n  return getEncodedEntryUri(this.bucket, this.key);\n}\n\nEntryPath.prototype.toStr = function(op) {\n  return 'op=/' + op + '/' + getEncodedEntryUri(this.bucket, this.key) + '&';\n}\n\nfunction EntryPathPair(src, dest) {\n  this.src = src || null;\n  this.dest = dest || null;\n}\n\nEntryPathPair.prototype.toStr = function(op, force) {\n  if (typeof(force)=='undefined'){\n\n    return 'op=/' + op + '/' + this.src.encode() + '/' + this.dest.encode() + '&';\n\n  }else{\n\n    return 'op=/' + op + '/' + this.src.encode() + '/' + this.dest.encode() + '/force/' + force + '&';\n  }\n}\n\nfunction BatchItemRet(error, code) {\n  this.error = error || null;\n  this.code = code || null;\n}\n\nfunction BatchStatItemRet(data, error, code) {\n  this.data = data;\n  this.error = error;\n  this.code = code;\n}\n\nClient.prototype.batchStat = function(entries, onret) {\n  fileHandle('stat', entries, onret);\n}\n\nClient.prototype.batchDelete = function(entries, onret) {\n  fileHandle('delete', entries, onret);\n}\n\nClient.prototype.batchMove = function(entries, onret) {\n  fileHandle('move', entries, onret);\n}\n\nClient.prototype.forceBatchMove = function(entries, force, onret) {\n\n  fileHandleForce('move', entries, force, onret);\n\n}\n\nClient.prototype.batchCopy = function(entries, onret) {\n  fileHandle('copy', entries, onret);\n}\n\nClient.prototype.forceBatchCopy = function(entries, force, onret) {\n\n  fileHandleForce('copy', entries, force, onret);\n\n}\n\n\nfunction fileHandle(op, entries, onret) {\n  var body = '';\n  for (var i in entries) {\n    body += entries[i].toStr(op);\n  }\n\n  var uri = conf.RS_HOST + '/batch';\n  var digest = util.generateAccessToken(uri, body);\n  rpc.postWithForm(uri, body, digest, onret);\n}\n\nfunction fileHandleForce(op, entries, force, onret) {\n  var body = '';\n  for (var i in entries) {\n    body += entries[i].toStr(op, force);\n  }\n\n  console.log(body);\n  var uri = conf.RS_HOST + '/batch';\n  var digest = util.generateAccessToken(uri, body);\n  rpc.postWithForm(uri, body, digest, onret);\n}\n\nfunction getEncodedEntryUri(bucket, key) {\n  return util.urlsafeBase64Encode(bucket + (key ? ':' + key : ''));\n}\n\n// ----- token --------\n// @gist PutPolicy\nfunction PutPolicy(scope, callbackUrl, callbackBody, returnUrl, returnBody, endUser, expires, persistentOps, persistentNotifyUrl) {\n  this.scope = scope || null;\n  this.callbackUrl = callbackUrl || null;\n  this.callbackBody = callbackBody || null;\n  this.returnUrl = returnUrl || null;\n  this.returnBody = returnBody || null;\n  this.endUser = endUser || null;\n  this.expires = expires || 3600;\n  this.persistentOps = persistentOps || null;\n  this.persistentNotifyUrl = persistentNotifyUrl || null;\n}\n// @endgist\n\nPutPolicy.prototype.token = function(mac) {\n  if (mac == null) {\n    mac = new Mac(conf.ACCESS_KEY, conf.SECRET_KEY);\n  }\n  var flags = this.getFlags();\n  var encodedFlags = util.urlsafeBase64Encode(JSON.stringify(flags));\n  var encoded = util.hmacSha1(encodedFlags, mac.secretKey);\n  var encodedSign = util.base64ToUrlSafe(encoded);\n  var uploadToken = mac.accessKey + ':' + encodedSign + ':' + encodedFlags;\n  return uploadToken;\n}\n\nPutPolicy.prototype.getFlags = function() {\n  var flags = {};\n  var attrs = ['scope', 'insertOnly', 'saveKey', 'endUser', 'returnUrl', 'returnBody', 'callbackUrl', 'callbackHost', 'callbackBody', 'callbackBodyType', 'callbackFetchKey', 'persistentOps', 'persistentNotifyUrl', 'persistentPipeline', 'fsizeLimit', 'detectMime', 'mimeLimit'];\n\n  for (var i = attrs.length - 1; i >= 0; i--) {\n    if (this[attrs[i]] !== null) {\n      flags[attrs[i]] = this[attrs[i]];\n    }\n  }\n\n  flags['deadline'] = this.expires + Math.floor(Date.now() / 1000);\n\n  return flags;\n}\n\nfunction PutPolicy2(putPolicyObj) {\n\n  if (typeof putPolicyObj !== 'object') {\n    return false;\n  }\n\n  this.scope = putPolicyObj.scope || null;\n  this.expires = putPolicyObj.expires || 3600;\n  this.insertOnly = putPolicyObj.insertOnly || null;\n\n  this.saveKey = putPolicyObj.saveKey || null;\n  this.endUser = putPolicyObj.endUser || null;\n\n  this.returnUrl = putPolicyObj.returnUrl || null;\n  this.returnBody = putPolicyObj.returnBody || null;\n\n  this.callbackUrl = putPolicyObj.callbackUrl || null;\n  this.callbackHost = putPolicyObj.callbackHost || null;\n  this.callbackBody = putPolicyObj.callbackBody || null;\n  this.callbackBodyType = putPolicyObj.callbackBodyType || null;\n  this.callbackFetchKey = putPolicyObj.callbackFetchKey || null;\n\n  this.persistentOps = putPolicyObj.persistentOps || null;\n  this.persistentNotifyUrl = putPolicyObj.persistentNotifyUrl || null;\n  this.persistentPipeline = putPolicyObj.persistentPipeline || null;\n\n  this.fsizeLimit = putPolicyObj.fsizeLimit || null;\n\n  this.fsizeMin = putPolicyObj.fsizeMin || null;\n\n  this.detectMime = putPolicyObj.detectMime || null;\n\n  this.mimeLimit = putPolicyObj.mimeLimit || null;\n\n  this.deleteAfterDays = putPolicyObj.deleteAfterDays || null;\n\n}\n\nPutPolicy2.prototype.token = function(mac) {\n  if (mac == null) {\n    mac = new Mac(conf.ACCESS_KEY, conf.SECRET_KEY);\n  }\n  var flags = this.getFlags();\n  var encodedFlags = util.urlsafeBase64Encode(JSON.stringify(flags));\n  var encoded = util.hmacSha1(encodedFlags, mac.secretKey);\n  var encodedSign = util.base64ToUrlSafe(encoded);\n  var uploadToken = mac.accessKey + ':' + encodedSign + ':' + encodedFlags;\n  return uploadToken;\n}\n\nPutPolicy2.prototype.getFlags = function() {\n  var flags = {};\n  var attrs = ['scope', 'insertOnly', 'saveKey', 'endUser', 'returnUrl', 'returnBody', 'callbackUrl', 'callbackHost', 'callbackBody', 'callbackBodyType', 'callbackFetchKey', 'persistentOps', 'persistentNotifyUrl', 'persistentPipeline', 'fsizeLimit','fsizeMin', 'detectMime', 'mimeLimit', 'deleteAfterDays'];\n\n  for (var i = attrs.length - 1; i >= 0; i--) {\n    if (this[attrs[i]] !== null) {\n      flags[attrs[i]] = this[attrs[i]];\n    }\n  }\n\n  flags['deadline'] = this.expires + Math.floor(Date.now() / 1000);\n\n  return flags;\n}\n\nfunction GetPolicy(expires) {\n  this.expires = expires || 3600;\n}\n\nGetPolicy.prototype.makeRequest = function(baseUrl, mac) {\n  if (!mac) {\n    mac = new Mac(conf.ACCESS_KEY, conf.SECRET_KEY);\n  }\n\n  var deadline = this.expires + Math.floor(Date.now() / 1000);\n\n  if (baseUrl.indexOf('?') >= 0) {\n    baseUrl += '&e=';\n  } else {\n    baseUrl += '?e=';\n  }\n  baseUrl += deadline;\n\n  var signature = util.hmacSha1(baseUrl, mac.secretKey);\n  var encodedSign = util.base64ToUrlSafe(signature);\n  var downloadToken = mac.accessKey + ':' + encodedSign;\n\n  return baseUrl + '&token=' + downloadToken;\n}\n\n// domain maybe 'http://hello.qiniu.com', 'https://hello.qiniu.com' and 'hello.qiniu.com'\n// query like '-thumbnail', '?imageMogr2/thumbnail/960x' and so on\nfunction makeBaseUrl(domain, key, query) {\n  key = new Buffer(key);\n  return (/^https?:\\/\\//.test(domain) ? domain : 'http://' + domain) + '/' + querystring.escape(key) + (query || '');\n}\n","/home/travis/build/npmtest/node-npmtest-qiniu/node_modules/qiniu/qiniu/rsf.js":"var rpc = require('./rpc');\nvar conf = require('./conf');\nvar util = require('./util');\n\nexports.listPrefix = function(bucket, prefix, marker, limit, delimiter, onret) {\n  var uri = getPrefixUri(bucket, prefix, marker, limit, delimiter);\n  var digest = util.generateAccessToken(uri, null);\n\n  rpc.postWithoutForm(uri, digest, onret)\n}\n\nfunction getPrefixUri(bucket, prefix, marker, limit, delimiter) {\n  var uri = conf.RSF_HOST + '/' + 'list?' + 'bucket=' + bucket;\n  if (marker) {\n    uri += '&' + 'marker=' + marker;\n  }\n\n  if (limit) {\n    uri += '&' + 'limit=' + limit;\n  }\n\n  if (prefix) {\n    uri += '&' + 'prefix=' + prefix;\n  }\n\n  if(delimiter){\n    uri += '&' + 'delimiter=' + delimiter;\n  }\n\n  return uri;\n}\n\nfunction ListItem(key, hash, fsize, putTime, mimeType, endUser) {\n  this.key = key || null;\n  this.hash = hash || null;\n  this.fsize = fsize || null;\n  this.putTime = putTime || null;\n  this.mimeType = mimeType || null;\n  this.endUser = endUser || null;\n}\n","/home/travis/build/npmtest/node-npmtest-qiniu/node_modules/qiniu/qiniu/fop.js":"var util = require('./util');\nvar rpc = require('./rpc');\nvar conf = require('./conf');\n\nvar querystring = require('querystring');\n\nexports.ImageView = ImageView;\nexports.ImageInfo = ImageInfo;\nexports.Exif = Exif;\nexports.pfop = pfop;\n\nfunction ImageView(mode, width, height, quality, format) {\n  this.mode = mode || 1;\n  this.width = width || 0;\n  this.height = height || 0;\n  this.quality = quality || 0;\n  this.format = format || null;\n}\n\nImageView.prototype.makeRequest = function(url) {\n  url += '?imageView2/' + this.mode;\n\n  if (this.width > 0) {\n    url += '/w/' + this.width;\n  }\n\n  if (this.height > 0) {\n    url += '/h/' + this.height;\n  }\n\n  if (this.quality > 0) {\n    url += '/q/' + this.quality;\n  }\n\n  if (this.format) {\n    url += '/format/' + this.format;\n  }\n\n  return url;\n}\n\nfunction ImageInfo() {}\n\nImageInfo.prototype.makeRequest = function(url) {\n  return url + '?imageInfo'\n}\n\nfunction Exif() {}\n\nExif.prototype.makeRequest = function(url) {\n  return url + '?exif'\n}\n\n\nfunction pfop(bucket, key, fops, opts, onret) {\n\n  opts = opts || {};\n\n  param = {\n    bucket: bucket,\n    key: key,\n    fops: fops\n  };\n  if (opts.notifyURL) {\n    param.notifyURL = opts.notifyURL;\n  } else {\n    param.notifyURL = 'www.test.com';\n  }\n  if (opts.force) {\n    param.force = 1;\n  }\n  if (opts.pipeline) {\n    param.pipeline = opts.pipeline;\n  }\n\n  var uri = conf.API_HOST + '/pfop/';\n  var body = querystring.stringify(param);\n  var auth = util.generateAccessToken(uri, body);\n  rpc.postWithForm(uri, body, auth, onret);\n}\n"}